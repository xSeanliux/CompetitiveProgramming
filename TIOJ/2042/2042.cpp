#include <iostream>
#include <string.h>
#include <vector>
#define ericxiao ios_base::sync_with_stdio(0); cin.tie(0);
using namespace std;
/*
int findWays(string s){
    int ans = 0;
    for(int i = 1; i < s.length(); i++){
        for(int j = i + 1; j < s.length(); j++){
            if(s[0] == '0' || (s[i] == '0' && j - i > 1)|| (s[j] == '0' && s.length() - j > 1)) continue;
            //cout << s.substr(0, i) << " + " << s.substr(i, j - i) << " ?= " <<s.substr(j, s.length()) << endl;
            if(stoi(s.substr(0, i)) + stoi(s.substr(i, j - i)) == stoi(s.substr(j, s.length()))){
                ans++;
            }
        }
    }
    return ans;
}

int main(){
    vector<string> K0, K1, K2;
    for(int i = 100; i <= 10000000 && K0.size() < 100; i++){
        string s = to_string(i);
        if(findWays(s) == 0 && K0.size() < 100){
            K0.push_back(s);
        }
    }
    for(int a = 1; a < 1000 && (K1.size() < 100 || K2.size() < 100); a++){
        for(int b = 1; b < 1000; b++){
            string s = to_string(a) + to_string(b) + to_string(a + b);
            int w = findWays(s);
            if(w == 1 && K1.size() < 100){
                K1.push_back(s);
            } else if(w == 2 && K2.size() < 100){
                K2.push_back(s);
            }
            if(K1.size() == 100 && K2.size() == 100) break;
        }
    }
    cout << "string K0[100] = {";
    for(int i = 0; i < 99; i++){
        cout << K0[i] << ",";
    }
    cout << K0[99] << "}, ";

    cout << "K1[100] = {";
    for(int i = 0; i < 99; i++){
        cout << K1[i] << ",";
    }
    cout << K1[99] << "}, ";

    cout << "K2[100] = {";
    for(int i = 0; i < 99; i++){
        cout << K2[i] << ",";
    }
    cout << K2[99] << "}, ";
}
*/

//Above was the code used to generate K_i
int K0[100] = {100,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,185,186,187,188,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,209}, K1[100] = {112,123,134,145,156,167,178,189,1910,12021,12122,12223,12324,12425,12526,12627,12728,12829,12930,13031,13132,13233,13334,13435,13536,13637,13738,13839,13940,14041,14142,14243,14344,14445,14546,14647,14748,14849,14950,15051,15152,15253,15354,15455,15556,15657,15758,15859,15960,16061,16162,16263,16364,16465,16566,16667,16768,16869,16970,17071,17172,17273,17374,17475,17576,17677,17778,17879,17980,18081,18182,18283,18384,18485,18586,18687,18788,18889,18990,19091,19192,19293,19394,19495,19596,19697,19798,19899,199100,1100101,1101102,1102103,1103104,1104105,1105106,1106107,1107108,1108109,1109110,1120121}, K2[100] = {11011,11112,11213,11314,11415,11516,11617,11718,11819,11920,1110111,1111112,1112113,1113114,1114115,1115116,1116117,1117118,1118119,1119120,22022,22123,22224,22325,22426,22527,22628,22729,22830,22931,2220222,2221223,2222224,2223225,2224226,2225227,2226228,2227229,2228230,2229231,33033,33134,33235,33336,33437,33538,33639,33740,33841,33942,3330333,3331334,3332335,3333336,3334337,3335338,3336339,3337340,3338341,3339342,44044,44145,44246,44347,44448,44549,44650,44751,44852,44953,4440444,4441445,4442446,4443447,4444448,4445449,4446450,4447451,4448452,4449453,55055,55156,55257,55358,55459,55560,55661,55762,55863,55964,5550555,5551556,5552557,5553558,5554559,5555560,5556561,5557562,5558563,5559564};
int N, K;
int main(){
    ericxiao
    cin >> K >> N;
    if(K == 0){
        for(int i = 0; i < N; i++){
            cout << K0[i] << endl;
        }
    } else if(K == 1){
        for(int i = 0; i < N; i++){
            cout << K1[i] << endl;
        }
    } else if(K == 2){
        for(int i = 0; i < N; i++){
            cout << K2[i] << endl;
        }
    }
}

